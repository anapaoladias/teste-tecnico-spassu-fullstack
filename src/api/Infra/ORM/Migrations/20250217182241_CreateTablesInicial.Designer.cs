// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteTecFullstackAngular.Api.Infra.ORM;

#nullable disable

namespace TesteTecFullstackAngular.Api.Infra.ORM.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20250217182241_CreateTablesInicial")]
    partial class CreateTablesInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TesteTecFullstackAngular.Api.Domain.Entities.Assunto", b =>
                {
                    b.Property<int>("CodAs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAs"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("CodAs");

                    b.ToTable("Assunto", (string)null);
                });

            modelBuilder.Entity("TesteTecFullstackAngular.Api.Domain.Entities.Autor", b =>
                {
                    b.Property<int>("CodAu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAu"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(40)");

                    b.HasKey("CodAu");

                    b.ToTable("Autor", (string)null);
                });

            modelBuilder.Entity("TesteTecFullstackAngular.Api.Domain.Entities.Livro", b =>
                {
                    b.Property<int>("Codl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codl"));

                    b.Property<string>("AnoPublicacao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(4)");

                    b.Property<int>("Edicao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("VARCHAR(40)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(40)");

                    b.HasKey("Codl");

                    b.ToTable("Livro", (string)null);
                });

            modelBuilder.Entity("TesteTecFullstackAngular.Api.Domain.Entities.LivroAssunto", b =>
                {
                    b.Property<int>("Livro_CodI")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Assunto_codAs")
                        .HasColumnType("INTEGER");

                    b.HasKey("Livro_CodI", "Assunto_codAs");

                    b.HasIndex("Assunto_codAs");

                    b.ToTable("Livro_Assunto", (string)null);
                });

            modelBuilder.Entity("TesteTecFullstackAngular.Api.Domain.Entities.LivroAutor", b =>
                {
                    b.Property<int>("Livro_CodI")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Autor_CodAu")
                        .HasColumnType("INTEGER");

                    b.HasKey("Livro_CodI", "Autor_CodAu");

                    b.HasIndex("Autor_CodAu");

                    b.ToTable("Livro_Autor", (string)null);
                });

            modelBuilder.Entity("TesteTecFullstackAngular.Api.Domain.Entities.LivroAssunto", b =>
                {
                    b.HasOne("TesteTecFullstackAngular.Api.Domain.Entities.Assunto", "Assunto")
                        .WithMany("LivroAssuntos")
                        .HasForeignKey("Assunto_codAs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TesteTecFullstackAngular.Api.Domain.Entities.Livro", "Livro")
                        .WithMany("LivroAssuntos")
                        .HasForeignKey("Livro_CodI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("TesteTecFullstackAngular.Api.Domain.Entities.LivroAutor", b =>
                {
                    b.HasOne("TesteTecFullstackAngular.Api.Domain.Entities.Autor", "Autor")
                        .WithMany("LivroAutores")
                        .HasForeignKey("Autor_CodAu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TesteTecFullstackAngular.Api.Domain.Entities.Livro", "Livro")
                        .WithMany("LivroAutores")
                        .HasForeignKey("Livro_CodI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("TesteTecFullstackAngular.Api.Domain.Entities.Assunto", b =>
                {
                    b.Navigation("LivroAssuntos");
                });

            modelBuilder.Entity("TesteTecFullstackAngular.Api.Domain.Entities.Autor", b =>
                {
                    b.Navigation("LivroAutores");
                });

            modelBuilder.Entity("TesteTecFullstackAngular.Api.Domain.Entities.Livro", b =>
                {
                    b.Navigation("LivroAssuntos");

                    b.Navigation("LivroAutores");
                });
#pragma warning restore 612, 618
        }
    }
}
